{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ahasweb/tests/acceptance/client-info-test.js","ahasweb/tests/acceptance/client-info-test.jshint.lint-test.js","ahasweb/tests/acceptance/client-list-test.js","ahasweb/tests/acceptance/client-list-test.jshint.lint-test.js","ahasweb/tests/acceptance/create-contact-test.js","ahasweb/tests/acceptance/create-contact-test.jshint.lint-test.js","ahasweb/tests/acceptance/create-medical-record-test.js","ahasweb/tests/acceptance/create-medical-record-test.jshint.lint-test.js","ahasweb/tests/acceptance/create-patient-test.js","ahasweb/tests/acceptance/create-patient-test.jshint.lint-test.js","ahasweb/tests/acceptance/create-user-test.js","ahasweb/tests/acceptance/create-user-test.jshint.lint-test.js","ahasweb/tests/acceptance/edit-contact-test.js","ahasweb/tests/acceptance/edit-contact-test.jshint.lint-test.js","ahasweb/tests/acceptance/login-test.js","ahasweb/tests/acceptance/login-test.jshint.lint-test.js","ahasweb/tests/acceptance/new-calendar-test.js","ahasweb/tests/acceptance/new-calendar-test.jshint.lint-test.js","ahasweb/tests/acceptance/new-client-test.js","ahasweb/tests/acceptance/new-client-test.jshint.lint-test.js","ahasweb/tests/acceptance/new-patient-test.js","ahasweb/tests/acceptance/new-patient-test.jshint.lint-test.js","ahasweb/tests/acceptance/new-side-note-test.js","ahasweb/tests/acceptance/new-side-note-test.jshint.lint-test.js","ahasweb/tests/acceptance/search-contacts-test.js","ahasweb/tests/acceptance/search-contacts-test.jshint.lint-test.js","ahasweb/tests/acceptance/search-patient-test.js","ahasweb/tests/acceptance/search-patient-test.jshint.lint-test.js","ahasweb/tests/acceptance/vaccine-list-test.js","ahasweb/tests/acceptance/vaccine-list-test.jshint.lint-test.js","ahasweb/tests/acceptance/view-contact-test.js","ahasweb/tests/acceptance/view-contact-test.jshint.lint-test.js","ahasweb/tests/acceptance/view-medical-record-editable-test.js","ahasweb/tests/acceptance/view-medical-record-editable-test.jshint.lint-test.js","ahasweb/tests/acceptance/view-patient-test.js","ahasweb/tests/acceptance/view-patient-test.jshint.lint-test.js","ahasweb/tests/acceptance/view-side-note-test.js","ahasweb/tests/acceptance/view-side-note-test.jshint.lint-test.js","ahasweb/tests/adapters/application.jshint.lint-test.js","ahasweb/tests/app.jshint.lint-test.js","ahasweb/tests/authenticators/jwt.jshint.lint-test.js","ahasweb/tests/components/client-list-filter.jshint.lint-test.js","ahasweb/tests/components/history-container.jshint.lint-test.js","ahasweb/tests/components/lab-result-history.jshint.lint-test.js","ahasweb/tests/components/medication-history.jshint.lint-test.js","ahasweb/tests/components/medication-input.jshint.lint-test.js","ahasweb/tests/components/medications-container.jshint.lint-test.js","ahasweb/tests/components/patient-history.jshint.lint-test.js","ahasweb/tests/components/vaccine-history.jshint.lint-test.js","ahasweb/tests/controllers/admin.jshint.lint-test.js","ahasweb/tests/controllers/application.jshint.lint-test.js","ahasweb/tests/controllers/client-info.jshint.lint-test.js","ahasweb/tests/controllers/client-list.jshint.lint-test.js","ahasweb/tests/controllers/create-contact.jshint.lint-test.js","ahasweb/tests/controllers/create-user.jshint.lint-test.js","ahasweb/tests/controllers/edit-client.jshint.lint-test.js","ahasweb/tests/controllers/edit-contact.jshint.lint-test.js","ahasweb/tests/controllers/lab-result-upload.jshint.lint-test.js","ahasweb/tests/controllers/list-side-note.jshint.lint-test.js","ahasweb/tests/controllers/login.jshint.lint-test.js","ahasweb/tests/controllers/medical-record.jshint.lint-test.js","ahasweb/tests/controllers/new-calendar.jshint.lint-test.js","ahasweb/tests/controllers/new-client.jshint.lint-test.js","ahasweb/tests/controllers/new-patient.jshint.lint-test.js","ahasweb/tests/controllers/new-side-note.jshint.lint-test.js","ahasweb/tests/controllers/radiography-upload.jshint.lint-test.js","ahasweb/tests/controllers/search-contacts.jshint.lint-test.js","ahasweb/tests/controllers/search-patient.jshint.lint-test.js","ahasweb/tests/controllers/user.jshint.lint-test.js","ahasweb/tests/controllers/view-appointment.jshint.lint-test.js","ahasweb/tests/controllers/view-calendar.jshint.lint-test.js","ahasweb/tests/controllers/view-contact.jshint.lint-test.js","ahasweb/tests/controllers/view-medical-record-editable.jshint.lint-test.js","ahasweb/tests/controllers/view-patient.jshint.lint-test.js","ahasweb/tests/helpers/destroy-app.js","ahasweb/tests/helpers/destroy-app.jshint.lint-test.js","ahasweb/tests/helpers/ember-cli-file-picker.js","ahasweb/tests/helpers/ember-simple-auth.js","ahasweb/tests/helpers/module-for-acceptance.js","ahasweb/tests/helpers/module-for-acceptance.jshint.lint-test.js","ahasweb/tests/helpers/resolver.js","ahasweb/tests/helpers/resolver.jshint.lint-test.js","ahasweb/tests/helpers/start-app.js","ahasweb/tests/helpers/start-app.jshint.lint-test.js","ahasweb/tests/integration/components/client-list-filter-test.js","ahasweb/tests/integration/components/client-list-filter-test.jshint.lint-test.js","ahasweb/tests/integration/components/history-container-test.js","ahasweb/tests/integration/components/history-container-test.jshint.lint-test.js","ahasweb/tests/integration/components/lab-result-history-test.js","ahasweb/tests/integration/components/lab-result-history-test.jshint.lint-test.js","ahasweb/tests/integration/components/medication-history-test.js","ahasweb/tests/integration/components/medication-history-test.jshint.lint-test.js","ahasweb/tests/integration/components/patient-history-test.js","ahasweb/tests/integration/components/patient-history-test.jshint.lint-test.js","ahasweb/tests/models/client-list.jshint.lint-test.js","ahasweb/tests/models/contact.jshint.lint-test.js","ahasweb/tests/models/new-client.jshint.lint-test.js","ahasweb/tests/models/new-patient.jshint.lint-test.js","ahasweb/tests/models/signup.jshint.lint-test.js","ahasweb/tests/models/user.jshint.lint-test.js","ahasweb/tests/models/users.jshint.lint-test.js","ahasweb/tests/models/view-patient.jshint.lint-test.js","ahasweb/tests/resolver.jshint.lint-test.js","ahasweb/tests/router.jshint.lint-test.js","ahasweb/tests/routes/admin.jshint.lint-test.js","ahasweb/tests/routes/client-info.jshint.lint-test.js","ahasweb/tests/routes/client-list.jshint.lint-test.js","ahasweb/tests/routes/create-contact.jshint.lint-test.js","ahasweb/tests/routes/create-user.jshint.lint-test.js","ahasweb/tests/routes/edit-client.jshint.lint-test.js","ahasweb/tests/routes/edit-contact.jshint.lint-test.js","ahasweb/tests/routes/index.jshint.lint-test.js","ahasweb/tests/routes/lab-result-upload.jshint.lint-test.js","ahasweb/tests/routes/list-side-note.jshint.lint-test.js","ahasweb/tests/routes/login.jshint.lint-test.js","ahasweb/tests/routes/medical-record.jshint.lint-test.js","ahasweb/tests/routes/new-calendar.jshint.lint-test.js","ahasweb/tests/routes/new-client.jshint.lint-test.js","ahasweb/tests/routes/new-patient.jshint.lint-test.js","ahasweb/tests/routes/new-side-note.jshint.lint-test.js","ahasweb/tests/routes/radiography-upload.jshint.lint-test.js","ahasweb/tests/routes/search-contacts.jshint.lint-test.js","ahasweb/tests/routes/search-patient.jshint.lint-test.js","ahasweb/tests/routes/user.jshint.lint-test.js","ahasweb/tests/routes/view-appointment.jshint.lint-test.js","ahasweb/tests/routes/view-calendar.jshint.lint-test.js","ahasweb/tests/routes/view-contact.jshint.lint-test.js","ahasweb/tests/routes/view-image-record.jshint.lint-test.js","ahasweb/tests/routes/view-medical-record-editable.jshint.lint-test.js","ahasweb/tests/routes/view-medical-record.jshint.lint-test.js","ahasweb/tests/routes/view-patient.jshint.lint-test.js","ahasweb/tests/routes/view-side-note.jshint.lint-test.js","ahasweb/tests/services/ajax.jshint.lint-test.js","ahasweb/tests/test-helper.js","ahasweb/tests/test-helper.jshint.lint-test.js","ahasweb/tests/transforms/user.jshint.lint-test.js","ahasweb/tests/unit/controllers/application-test.js","ahasweb/tests/unit/controllers/application-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/client-info-test.js","ahasweb/tests/unit/controllers/client-info-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/client-list-test.js","ahasweb/tests/unit/controllers/client-list-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/create-contact-test.js","ahasweb/tests/unit/controllers/create-contact-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/create-user-test.js","ahasweb/tests/unit/controllers/create-user-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/edit-client-test.js","ahasweb/tests/unit/controllers/edit-client-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/edit-contact-test.js","ahasweb/tests/unit/controllers/edit-contact-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/lab-result-upload-test.js","ahasweb/tests/unit/controllers/lab-result-upload-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/list-side-note-test.js","ahasweb/tests/unit/controllers/list-side-note-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/login-test.js","ahasweb/tests/unit/controllers/login-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/medical-record-test.js","ahasweb/tests/unit/controllers/medical-record-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/new-calendar-test.js","ahasweb/tests/unit/controllers/new-calendar-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/new-client-test.js","ahasweb/tests/unit/controllers/new-client-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/new-side-note-test.js","ahasweb/tests/unit/controllers/new-side-note-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/radiography-upload-test.js","ahasweb/tests/unit/controllers/radiography-upload-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/search-contacts-test.js","ahasweb/tests/unit/controllers/search-contacts-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/view-appointment-test.js","ahasweb/tests/unit/controllers/view-appointment-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/view-calendar-test.js","ahasweb/tests/unit/controllers/view-calendar-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/view-contact-test.js","ahasweb/tests/unit/controllers/view-contact-test.jshint.lint-test.js","ahasweb/tests/unit/controllers/view-medical-record-editable-test.js","ahasweb/tests/unit/controllers/view-medical-record-editable-test.jshint.lint-test.js","ahasweb/tests/unit/models/client-list-test.js","ahasweb/tests/unit/models/client-list-test.jshint.lint-test.js","ahasweb/tests/unit/models/new-client-test.js","ahasweb/tests/unit/models/new-client-test.jshint.lint-test.js","ahasweb/tests/unit/models/person-test.js","ahasweb/tests/unit/models/person-test.jshint.lint-test.js","ahasweb/tests/unit/models/view-patient-test.js","ahasweb/tests/unit/models/view-patient-test.jshint.lint-test.js","ahasweb/tests/unit/routes/client-info-test.js","ahasweb/tests/unit/routes/client-info-test.jshint.lint-test.js","ahasweb/tests/unit/routes/client-list-test.js","ahasweb/tests/unit/routes/client-list-test.jshint.lint-test.js","ahasweb/tests/unit/routes/create-contact-test.js","ahasweb/tests/unit/routes/create-contact-test.jshint.lint-test.js","ahasweb/tests/unit/routes/create-user-test.js","ahasweb/tests/unit/routes/create-user-test.jshint.lint-test.js","ahasweb/tests/unit/routes/edit-client-test.js","ahasweb/tests/unit/routes/edit-client-test.jshint.lint-test.js","ahasweb/tests/unit/routes/edit-contact-test.js","ahasweb/tests/unit/routes/edit-contact-test.jshint.lint-test.js","ahasweb/tests/unit/routes/index-test.js","ahasweb/tests/unit/routes/index-test.jshint.lint-test.js","ahasweb/tests/unit/routes/lab-result-upload-test.js","ahasweb/tests/unit/routes/lab-result-upload-test.jshint.lint-test.js","ahasweb/tests/unit/routes/list-side-note-test.js","ahasweb/tests/unit/routes/list-side-note-test.jshint.lint-test.js","ahasweb/tests/unit/routes/login-test.js","ahasweb/tests/unit/routes/login-test.jshint.lint-test.js","ahasweb/tests/unit/routes/medical-record-test.js","ahasweb/tests/unit/routes/medical-record-test.jshint.lint-test.js","ahasweb/tests/unit/routes/new-calendar-test.js","ahasweb/tests/unit/routes/new-calendar-test.jshint.lint-test.js","ahasweb/tests/unit/routes/new-client-test.js","ahasweb/tests/unit/routes/new-client-test.jshint.lint-test.js","ahasweb/tests/unit/routes/new-patient-test.js","ahasweb/tests/unit/routes/new-patient-test.jshint.lint-test.js","ahasweb/tests/unit/routes/new-side-note-test.js","ahasweb/tests/unit/routes/new-side-note-test.jshint.lint-test.js","ahasweb/tests/unit/routes/radiography-upload-test.js","ahasweb/tests/unit/routes/radiography-upload-test.jshint.lint-test.js","ahasweb/tests/unit/routes/search-contacts-test.js","ahasweb/tests/unit/routes/search-contacts-test.jshint.lint-test.js","ahasweb/tests/unit/routes/search-patient-test.js","ahasweb/tests/unit/routes/search-patient-test.jshint.lint-test.js","ahasweb/tests/unit/routes/view-appointment-test.js","ahasweb/tests/unit/routes/view-appointment-test.jshint.lint-test.js","ahasweb/tests/unit/routes/view-calendar-test.js","ahasweb/tests/unit/routes/view-calendar-test.jshint.lint-test.js","ahasweb/tests/unit/routes/view-contact-test.js","ahasweb/tests/unit/routes/view-contact-test.jshint.lint-test.js","ahasweb/tests/unit/routes/view-image-record-test.js","ahasweb/tests/unit/routes/view-image-record-test.jshint.lint-test.js","ahasweb/tests/unit/routes/view-medical-record-test.js","ahasweb/tests/unit/routes/view-medical-record-test.jshint.lint-test.js","ahasweb/tests/unit/routes/view-patient-test.js","ahasweb/tests/unit/routes/view-patient-test.jshint.lint-test.js","ahasweb/tests/unit/routes/view-side-note-test.js","ahasweb/tests/unit/routes/view-side-note-test.jshint.lint-test.js","ahasweb/tests/unit/services/ajax-test.js","ahasweb/tests/unit/services/ajax-test.jshint.lint-test.js","ahasweb/tests/unit/transforms/user-test.js","ahasweb/tests/unit/transforms/user-test.jshint.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('ahasweb/tests/acceptance/client-info-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n\t(0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | client info');\n\n\t(0, _qunit.test)('visiting /client-info/1 before login', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.invalidateSession)(this.application);\n\t\tvisit('client-info/1');\n\n\t\tandThen(function () {\n\t\t\tassert.notEqual(currentURL(), '/client-info/1');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('visiting /client-info/1', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/client-info/1');\n\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/client-info/1');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('last name, first name is present', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/client-info/1');\n\n\t\tandThen(function () {\n\t\t\tvar item = find(\".panel-body h4:first\").text().trim();\n\t\t\tassert.equal(item, \"Bravo, Johny\");\n\t\t});\n\t});\n\n\t(0, _qunit.test)('transitions to new-patient/1 after clicking Add A Patient button', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/client-info/1');\n\n\t\tclick('button');\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/new-patient/1');\n\t\t});\n\t});\n});","define('ahasweb/tests/acceptance/client-info-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/client-info-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/client-info-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/client-list-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n\t(0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | client list');\n\n\t(0, _qunit.test)('visiting /client-list before login', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.invalidateSession)(this.application);\n\t\tvisit('client-list');\n\n\t\tandThen(function () {\n\t\t\tassert.notEqual(currentURL(), '/client-list');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('visiting /client-list', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/client-list');\n\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/client-list');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('client list contains an item', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/client-list');\n\n\t\tandThen(function () {\n\t\t\t// let item = document.getElements(\"div.div.p\").textContent;\n\t\t\tvar item = find(\".nameListItem\").first().text().trim();\n\t\t\tassert.equal(item, \"Johny Bravo\");\n\t\t});\n\t});\n\n\t(0, _qunit.test)('should transition to /client-list/1', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/client-list');\n\n\t\tclick(\".nameListItem\");\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/client-info/1');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('should transition to /new-client on button click', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/client-list');\n\n\t\tclick('#newClientLinkButton');\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/new-client');\n\t\t});\n\t});\n});","define('ahasweb/tests/acceptance/client-list-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/client-list-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/client-list-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/create-contact-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | create contact');\n\n  (0, _qunit.test)('visiting /create-contact', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/create-contact');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/create-contact');\n    });\n  });\n\n  (0, _qunit.test)('creating new contact successful', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/create-contact');\n\n    fillIn('#first_name', \"Kristy\");\n    fillIn('#last_name', \"Newbury\");\n    fillIn('#phoneNumber', \"123-123-1234\");\n    fillIn('#faxNumber', \"123-123-1233\");\n    fillIn('#email', \"k@gmail.ca\");\n    fillIn('#address', \"12 st 53 ave\");\n    click('#create-contact-button');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/search-contacts');\n    });\n  });\n\n  (0, _qunit.test)('creating new contact no first name', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/create-contact');\n\n    fillIn('#last_name', \"Newbury\");\n    fillIn('#phoneNumber', \"123-123-1234\");\n    fillIn('#faxNumber', \"123-123-1233\");\n    fillIn('#email', \"k@gmail.ca\");\n    fillIn('#address', \"12 st 53 ave\");\n    click('#create-contact-button');\n\n    andThen(function () {\n      assert.equal(find('#statusBad').text(), 'First name cannot be blank');\n    });\n  });\n});","define('ahasweb/tests/acceptance/create-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/create-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/create-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/create-medical-record-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | create medical record');\n\n  (0, _qunit.test)('visiting /view-patient/1/medical-record', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-patient/1/medical-record');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/view-patient/1/medical-record');\n    });\n  });\n\n  (0, _qunit.test)('create medical record success', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-patient/1/medical-record');\n\n    //any touch to the signature pad should count as signature....\n    //also dont really need to fill in any of the fields just for this test\n    click('#signature');\n    click('#create-medical-button');\n\n    andThen(function () {\n      assert.equal(find('#statusGood').text(), 'Record created, record is editable until 12pm tonight');\n    });\n  });\n\n  (0, _qunit.test)('create medical record without signature', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-patient/1/medical-record');\n\n    click('#create-medical-button');\n\n    andThen(function () {\n      assert.equal(find('#statusBad').text(), 'Record cannot be created without a signature');\n    });\n  });\n});","define('ahasweb/tests/acceptance/create-medical-record-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/create-medical-record-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/create-medical-record-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/create-patient-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | create patient');\n\n  (0, _qunit.test)('visiting /new-patient/1', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/new-patient/1');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/new-patient/1');\n    });\n  });\n});","define('ahasweb/tests/acceptance/create-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/create-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/create-patient-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/create-user-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | create user');\n\n  (0, _qunit.test)('visiting /create-user', function (assert) {\n    visit('/create-user');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/create-user');\n    });\n  });\n\n  (0, _qunit.test)('adding new user valid', function (assert) {\n    visit('/create-user');\n\n    fillIn('#name', \"kristy\");\n    fillIn('#username', \"user@gmail.ca\");\n    fillIn('#password', \"password\");\n    fillIn('#passwordConfirm', \"password\");\n    click('#create-user-button');\n    andThen(function () {\n      assert.equal(find('#statusGood').text(), 'Account created!');\n      assert.notEqual(find('#statusBad').text(), \"Incorrect email format\");\n    });\n  });\n\n  (0, _qunit.test)('adding invalid user, too short password', function (assert) {\n    visit('/create-user');\n\n    var pass = 'pass';\n\n    fillIn('#name', \"kristy\");\n    fillIn('#username', \"auser@gmail.com\");\n    fillIn('#password', pass);\n    fillIn('#passwordConfirm', pass);\n    click('#create-user-button');\n    andThen(function () {\n      assert.equal(find('#statusBad').text(), \"Password too short, must be at least 7 characters!\");\n      assert.notEqual(find('#statusGood').text(), \"Password too short, must be at least 7 characters!\");\n    });\n  });\n\n  (0, _qunit.test)('adding invalid user, incorrect format email', function (assert) {\n    visit('/create-user');\n\n    fillIn('#name', \"kristy\");\n    fillIn('#username', \"usermail.ca\");\n    fillIn('#password', \"password\");\n    fillIn('#passwordConfirm', \"password\");\n    click('#create-user-button');\n    andThen(function () {\n      assert.equal(find('#statusBad').text(), \"Incorrect email format\");\n    });\n  });\n\n  (0, _qunit.test)('adding invalid user, name is blank', function (assert) {\n    visit('/create-user');\n\n    fillIn('#username', \"usermail@gmail.ca\");\n    fillIn('#password', \"password\");\n    fillIn('#passwordConfirm', \"password\");\n    click('#create-user-button');\n    andThen(function () {\n      assert.equal(find('#statusBad').text(), \"Name cannot be blank\");\n    });\n  });\n});","define('ahasweb/tests/acceptance/create-user-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/create-user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/create-user-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/edit-contact-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | edit contact');\n\n  (0, _qunit.test)('visiting /edit-contact/1', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/edit-contact/1');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/edit-contact/1');\n    });\n  });\n\n  (0, _qunit.test)('checking info added correctly', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/edit-contact/1');\n\n    andThen(function () {\n      //this is all we can check on this page since we cannot grab input element values for some reason\n      assert.equal(find('.heading').text().trim(), 'Editing: Justin Barclay');\n    });\n  });\n\n  (0, _qunit.test)('checking we can click done button', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/edit-contact/1');\n\n    fillIn('#phoneNumber', '780-555-5555');\n    click('#done-edit-button');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/view-contact/1');\n    });\n  });\n});","define('ahasweb/tests/acceptance/edit-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/edit-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/edit-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/login-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | login');\n\n  (0, _qunit.test)('visiting /search-patient while authenticated', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/search-patient');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/search-patient');\n    });\n  });\n\n  (0, _qunit.test)('visiting /search-patient while not authenticated', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.invalidateSession)(this.application);\n    visit('/search-patient');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/login');\n    });\n  });\n\n  (0, _qunit.test)('login with valid user, correct password', function (assert) {\n    visit('/login');\n\n    fillIn('#username', 'valid@email.ca');\n    fillIn('#password', 'validpassword');\n    click('#login-button');\n\n    andThen(function () {\n      assert.notEqual(currentURL(), '/login');\n      assert.equal(currentURL(), '/client-list');\n    });\n  });\n});","define('ahasweb/tests/acceptance/login-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/login-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/new-calendar-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n\t(0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | new-calendar');\n\n\t(0, _qunit.test)('visiting /new-calendar/ before login', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.invalidateSession)(this.application);\n\t\tvisit('new-calendar');\n\n\t\tandThen(function () {\n\t\t\tassert.notEqual(currentURL(), '/new-calendar/');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('visiting /new-calendar/', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/new-calendar/');\n\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/new-calendar/');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('creating new calendar unsuccessful', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/new-calendar');\n\n\t\tfillIn('#appointmentStart', \"tttt\");\n\t\tfillIn('#appointmentEnd', \"sssy\");\n\t\tclick('#create-appointment-button');\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/new-calendar/');\n\t\t});\n\t});\n});","define('ahasweb/tests/acceptance/new-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/new-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/new-calendar-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/new-client-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n\t//import Pretender from 'pretender';\n\n\t//let serv;\n\n\t(0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | new client');\n\n\t(0, _qunit.test)('visiting /new-client', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/new-client');\n\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/new-client');\n\t\t});\n\t});\n\t/*\r\n moduleForAcceptance('ajax-get component', {\r\n \tbeforeEach(){\r\n \t\tserv = new Pretender();\r\n \t},\r\n \tafterEach(){\r\n \t\tserv.shutdown();\r\n \t}\r\n });*/\n\n\t// test('waiting for a route with async widget', function (assert){\n\t// \t// this test is based on the test from https://www.npmjs.com/package/ember-ajax\n\t// \t// const PAYLOAD = [{name: 'bob',\n\t// \t// \t\t\t\taddress: '123 somewehere st, Edmonton',\n\t// \t// \t\t\t\tphoneNumber: '780-555-1234',\n\t// \t// \t\t\t\temail: 'some@email.com',\n\t// \t// \t\t\t\tlicos: '12345',\n\t// \t// \t\t\t\tsocialAssistance: '4313'},\n\t// \t// \t\t\t\t{name: 'Alice',\n\t// \t// \t\t\t\taddress: '41 somewehere ave, Edmonton',\n\t// \t// \t\t\t\tphoneNumber: '780-555-2222',\n\t// \t// \t\t\t\temail: 'some1535@email.com',\n\t// \t// \t\t\t\tlicos: '125235',\n\t// \t// \t\t\t\tsocialAssistance: '5555'}];\n\t// \tconst PAYLOAD = [{ title: 'Foo' }, { title: 'Bar' }, { title: 'Baz' }];\n\t// \tserv.get('/api/client', function(){\n\t// \t\treturn [200, {\"Content-Type\": \"application/json\"}, JSON.stringyfy(PAYLOAD)];\n\t// \t}, 300);\n\n\t// \tvisit('/new-client');\n\n\t// \tandThen(function() {\n\t// \t\tassert.equal(currentURL(), '/new-client');\n\t// \t\tassert.ok($('.ajax-get').length === 1, 'ajax-get component is rendered');\n\t// \t});\n\n\t// \tclick('button:contains(Create Client)');\n\n\t// \tandThen(function(){\n\t// \t\tassert.equal($('.ajax-get li:eq(0)').text(), 'Foo');\n\t// \t\tassert.equal($('.ajax-get li:eq(1)').text(), 'Bar');\n\t//     \tassert.equal($('.ajax-get li:eq(2)').text(), 'Baz');\n\t// \t});\n\t// });\n\n\t// test('should fill in form with correct data', function (assert){\n\n\t// \tauthenticateSession(this.application);\n\t// \tvisit('/new-client');\n\n\t// \tandThen(function(){\n\t// \t\tassert.equal(currentURL(), '/new-client');\n\t// \t\tassert.equal(find('#clientName').text(), '');\t\t\n\t// \t});\n\n\t// \tfillIn('#clientName', 'Alice');\n\t// \t//fillIn(\"input:contains(Client's Name)\")\n\t// \t//find('#clientName').change();\n\t// \t//fillIn('#clientAddress', 'Wonderland');\n\t// \tandThen(function(){\n\t// \t\tassert.equal(find('#clientName').text(), 'Alice');\n\t// \t});\n\t// \t//find('#clientName').change();\n\n\t// \t// andThen(function(){\n\t// \t// \tassert.equal(find('clientName')., 'Alice');\n\t// \t// });\n\n\t// });\n\n\t/*test('should transition to another page', function (assert){\r\n \t\r\n \t// visit('/login');\r\n \t// fillIn('#username', 'malajeun@ualberta.ca');\r\n \t// fillIn('#password', '1234567');\r\n \t// click('#login-button');\r\n \t// // andThen(function(){\r\n \t// // \tclick('button:contains(Login)');\r\n \t// // });\r\n \t// andThen(function(){\r\n \t// \tassert.equal(currentURL(), '/afterlogin');\r\n \t// });\r\n \tauthenticateSession(this.application);\r\n \r\n \tvisit('/new-client');\r\n \t\r\n \tandThen(function(){\r\n \t\tassert.equal(currentURL(), '/new-client');\r\n \t\t\r\n \t});\r\n \r\n \tfillIn('#clientName', 'Alice');\r\n \tfillIn('#clientAddress', 'Wonderland');\r\n \tfillIn('#clientPhone', '555-555-5555');\r\n \tfillIn('#clientEmail', 'alice@wonderland.com');\r\n \tfillIn('#clientID', '12512');\r\n \r\n \tfillIn('#alternativeName', 'Bob McKenzie');\r\n \tfillIn('#alternativeAddress', 'Dougs place');\r\n \tfillIn('#alternativeEmail', 'bob@email.com');\r\n \r\n \tclick('button:contains(Create Client)');\r\n \t//click('#create-client-button');\r\n \tandThen(function(){\r\n \t\tassert.notEqual(currentURL(), '/new-client');\r\n \t\tassert.equal(currentURL(), '/search-patient');\r\n \t});\r\n });*/\n\n\t// function loginToTest(){\n\t// \tvisit('/login');\n\t// \tfillIn('#username', 'malajeun@ualberta.ca');\n\t// \tfillin('#password', '1234567');\n\t// \tandThen(function(){\n\t// \t\tclick('button:contains(Login)');\n\t// \t});\n\t// }\n});","define('ahasweb/tests/acceptance/new-client-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/new-client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/new-client-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/new-patient-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | patient info');\n\n  (0, _qunit.test)('visiting /new-patient', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/new-patient/1');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/new-patient/1');\n    });\n  });\n\n  (0, _qunit.test)('adding new user valid', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/new-patient/1');\n\n    fillIn('#patientName', \"Bob\");\n    fillIn('#patientSpecies', \"Fred\");\n    fillIn('#patientGender', \"M\");\n    fillIn('#patientStatus', \"N\");\n    fillIn('#patientAge', \"13\");\n    fillIn('#patientColor', \"Brown\");\n    fillIn('#patientTatoo', \"123\");\n    fillIn('#patientMicrochip', \"111\");\n    click('#create-patient-button');\n    andThen(function () {\n      assert.equal(find('#statusGood').text());\n    });\n  });\n});","define('ahasweb/tests/acceptance/new-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/new-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/new-patient-test.js should pass jshint.\\nacceptance/new-patient-test.js: line 3, col 31, \\'invalidateSession\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/acceptance/new-side-note-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | new side note');\n\n  (0, _qunit.test)('visiting /new-side-note/ before login', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.invalidateSession)(this.application);\n    visit('/new-side-note/');\n\n    andThen(function () {\n      assert.notEqual(currentURL(), '/new-side-note/');\n    });\n  });\n\n  (0, _qunit.test)('visiting /new-side-note/', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/new-side-note/');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/new-side-note/');\n    });\n  });\n\n  (0, _qunit.test)('creating new side note successful', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/new-side-note');\n\n    fillIn('#medNote', \"Need to take asprine 4 times a day\");\n    fillIn('#medSig', \"Newbury\");\n    click('#create-sidenote-button');\n    andThen(function () {\n      assert.notEqual(currentURL(), '/new-side-note/');\n    });\n  });\n\n  (0, _qunit.test)('creating new side note unsuccessful', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/new-side-note');\n\n    fillIn('#medNote', \"\");\n    fillIn('#medSig', \"\");\n    click('#create-sidenote-button');\n    andThen(function () {\n      assert.Equal(currentURL(), '/new-side-note/');\n    });\n  });\n});","define('ahasweb/tests/acceptance/new-side-note-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/new-side-note-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/new-side-note-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/search-contacts-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | search contact');\n\n  (0, _qunit.test)('visiting /search-contacts', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/search-contacts');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/search-contacts');\n    });\n  });\n\n  (0, _qunit.test)('checking search info rendered before search', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/search-contacts');\n\n    andThen(function () {\n      assert.equal(find('#veterinariansHeading').text(), 'Veterinarians');\n      assert.equal(find('.veterinariansContact').first().text(), 'Tony Stark');\n    });\n  });\n\n  (0, _qunit.test)('checking we can search', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/search-contacts');\n\n    fillIn('#search-bar', 'Justin');\n    click('#search-button');\n\n    andThen(function () {\n      assert.equal(find('.volunteersContact').length, 1);\n      assert.equal(find('.volunteersContact').first().text(), 'Justin Barclay');\n    });\n  });\n});","define('ahasweb/tests/acceptance/search-contacts-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/search-contacts-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/search-contacts-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/search-patient-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\t(0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | search patient');\n\n\t(0, _qunit.test)('visiting /search-patient/ before login', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.invalidateSession)(this.application);\n\t\tvisit('search-patient');\n\n\t\tandThen(function () {\n\t\t\tassert.notEqual(currentURL(), '/search-patient/');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('visiting /search-patient/', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/search-patient/');\n\n\t\tandThen(function () {\n\t\t\tassert.equal(currentURL(), '/search-patient/');\n\t\t});\n\t});\n\n\t(0, _qunit.test)('checking search info rendered before search', function (assert) {\n\t\t(0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n\t\tvisit('/search-patient');\n\n\t\tandThen(function () {\n\t\t\tassert.equal(find('#patientHeading').text(), 'Patients');\n\t\t});\n\t});\n});","define('ahasweb/tests/acceptance/search-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/search-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/search-patient-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/vaccine-list-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | view vaccines');\n\n  //the test passes, but visiting this page is problematic, the component starts with inital value patiantId = 0, and\n  // this doesnt seem to be a problem when running bc by the time we get o ajax it has taken real value, but in the tests\n  // this will make some calls with 0 and config does not intercept?\n  (0, _qunit.test)('checking list added correctly', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-patient/1');\n\n    click('#vaccine-component-button');\n\n    andThen(function () {\n      assert.equal(find('.vaccineList').length, 2);\n    });\n  });\n});","define('ahasweb/tests/acceptance/vaccine-list-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/vaccine-list-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/vaccine-list-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/view-contact-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | view contact');\n\n  (0, _qunit.test)('visiting /view-contact/1', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-contact/1');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/view-contact/1');\n    });\n  });\n\n  (0, _qunit.test)('checking info added correctly', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-contact/1');\n\n    andThen(function () {\n      assert.equal(find('#contactName').text(), 'Contact information for: Justin Barclay');\n      assert.equal(find('#contactPhoneNumber').text(), 'Phone Number: 555-555-5555');\n      assert.equal(find('#contactEmail').text(), 'Email: fakejustin@ualberta.ca');\n      assert.equal(find('#contactFaxNumber').text(), 'Fax Number: 555-555-5556');\n      assert.equal(find('#contactAddress').text(), 'Address: 116 St & 85 Ave, Edmonton, AB T6G 2R3');\n    });\n  });\n});","define('ahasweb/tests/acceptance/view-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/view-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/view-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/view-medical-record-editable-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | view medical record');\n\n  (0, _qunit.test)('visiting /view-patient/1/view-medical-record/1', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-patient/1/view-medical-record/1');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/view-patient/1/view-medical-record/1');\n    });\n  });\n\n  (0, _qunit.test)('visiting /view-patient/1/view-medical-record-editable/1', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-patient/1/view-medical-record-editable/1');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/view-patient/1/view-medical-record-editable/1');\n    });\n  });\n\n  (0, _qunit.test)('medical record info shows up', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    visit('/view-patient/1/view-medical-record/1');\n\n    andThen(function () {\n      assert.equal(find('#summary')[0].value, 'fake summary');\n      assert.equal(find('#attitudeBAR')[0].checked, true);\n      assert.equal(find('#attitudeDepressed')[0].checked, false);\n    });\n  });\n});","define('ahasweb/tests/acceptance/view-medical-record-editable-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/view-medical-record-editable-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/view-medical-record-editable-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/acceptance/view-patient-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | view patient');\n\n  //these are commented out because they will break all tests, becuase fake model is not correct for it is not correct in mirage/config atm\n\n  (0, _qunit.test)('visiting /view-patient/ before login', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.invalidateSession)(this.application);\n    visit('view-patient');\n\n    andThen(function () {\n      assert.notEqual(currentURL(), '/view-patient');\n    });\n  });\n\n  (0, _qunit.test)('visiting /view-patient', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    //visit('/view-patient');\n\n    andThen(function () {\n      //assert.equal(currentURL(), '/view-patient');\n    });\n  });\n});","define('ahasweb/tests/acceptance/view-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/view-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/view-patient-test.js should pass jshint.\\nacceptance/view-patient-test.js: line 21, col 41, \\'assert\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/acceptance/view-side-note-test', ['exports', 'qunit', 'ahasweb/tests/helpers/module-for-acceptance', 'ahasweb/tests/helpers/ember-simple-auth'], function (exports, _qunit, _ahaswebTestsHelpersModuleForAcceptance, _ahaswebTestsHelpersEmberSimpleAuth) {\n\n  (0, _ahaswebTestsHelpersModuleForAcceptance['default'])('Acceptance | view contact');\n\n  //important question: is this how we are going to structure the app's urls ? sure this reflects the structure of what we are posting to but should it be this way on our end? I am open to mulitple answers -Kristy\n  (0, _qunit.test)('visiting /patients/1/medical_records/1/notes/1', function (assert) {\n    (0, _ahaswebTestsHelpersEmberSimpleAuth.authenticateSession)(this.application);\n    //visit('/patients/1/medical_records/1/notes/1');\n\n    andThen(function () {\n      //assert.equal(currentURL(), '/patients/1/medical_records/1/notes/1');\n    });\n  });\n});","define('ahasweb/tests/acceptance/view-side-note-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/view-side-note-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/view-side-note-test.js should pass jshint.\\nacceptance/view-side-note-test.js: line 8, col 65, \\'assert\\' is defined but never used.\\nacceptance/view-side-note-test.js: line 3, col 31, \\'invalidateSession\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('ahasweb/tests/adapters/application.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('ahasweb/tests/app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('ahasweb/tests/authenticators/jwt.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | authenticators/jwt.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'authenticators/jwt.js should pass jshint.');\n  });\n});","define('ahasweb/tests/components/client-list-filter.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/client-list-filter.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/client-list-filter.js should pass jshint.');\n  });\n});","define('ahasweb/tests/components/history-container.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/history-container.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/history-container.js should pass jshint.');\n  });\n});","define('ahasweb/tests/components/lab-result-history.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/lab-result-history.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/lab-result-history.js should pass jshint.\\ncomponents/lab-result-history.js: line 24, col 13, \\'ajaxGet\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/components/medication-history.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/medication-history.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/medication-history.js should pass jshint.');\n  });\n});","define('ahasweb/tests/components/medication-input.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/medication-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/medication-input.js should pass jshint.');\n  });\n});","define('ahasweb/tests/components/medications-container.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/medications-container.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/medications-container.js should pass jshint.');\n  });\n});","define('ahasweb/tests/components/patient-history.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/patient-history.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/patient-history.js should pass jshint.');\n  });\n});","define('ahasweb/tests/components/vaccine-history.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/vaccine-history.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/vaccine-history.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/admin.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/admin.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/admin.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/application.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/client-info.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/client-info.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/client-info.js should pass jshint.\\ncontrollers/client-info.js: line 8, col 57, Missing semicolon.\\ncontrollers/client-info.js: line 23, col 57, Missing semicolon.\\n\\n2 errors');\n  });\n});","define('ahasweb/tests/controllers/client-list.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/client-list.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/client-list.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/create-contact.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/create-contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/create-contact.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/create-user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/create-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/create-user.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/edit-client.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/edit-client.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/edit-client.js should pass jshint.\\ncontrollers/edit-client.js: line 49, col 21, \\'clearFields\\' is not defined.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/controllers/edit-contact.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/edit-contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/edit-contact.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/lab-result-upload.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/lab-result-upload.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/lab-result-upload.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/list-side-note.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/list-side-note.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/list-side-note.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/login.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/login.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/medical-record.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/medical-record.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/medical-record.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/new-calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/new-calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/new-calendar.js should pass jshint.\\ncontrollers/new-calendar.js: line 33, col 56, Missing semicolon.\\ncontrollers/new-calendar.js: line 30, col 36, \\'data\\' is defined but never used.\\ncontrollers/new-calendar.js: line 68, col 23, \\'moment\\' is not defined.\\n\\n3 errors');\n  });\n});","define('ahasweb/tests/controllers/new-client.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/new-client.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-client.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/new-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/new-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-patient.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/new-side-note.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/new-side-note.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/new-side-note.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/radiography-upload.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/radiography-upload.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/radiography-upload.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/search-contacts.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/search-contacts.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/search-contacts.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/search-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/search-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/search-patient.js should pass jshint.\\ncontrollers/search-patient.js: line 13, col 60, \\'model\\' is not defined.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/controllers/user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/user.js should pass jshint.\\ncontrollers/user.js: line 8, col 17, \\'button\\' is defined but never used.\\ncontrollers/user.js: line 15, col 13, \\'self\\' is not defined.\\ncontrollers/user.js: line 21, col 33, \\'self\\' is not defined.\\ncontrollers/user.js: line 22, col 21, \\'self\\' is not defined.\\ncontrollers/user.js: line 27, col 25, \\'self\\' is not defined.\\ncontrollers/user.js: line 28, col 25, \\'self\\' is not defined.\\ncontrollers/user.js: line 30, col 21, \\'self\\' is not defined.\\ncontrollers/user.js: line 21, col 21, \\'clearFields\\' is not defined.\\n\\n8 errors');\n  });\n});","define('ahasweb/tests/controllers/view-appointment.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/view-appointment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/view-appointment.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/view-calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/view-calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/view-calendar.js should pass jshint.\\ncontrollers/view-calendar.js: line 5, col 33, \\'view\\' is defined but never used.\\ncontrollers/view-calendar.js: line 5, col 24, \\'jsEvent\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('ahasweb/tests/controllers/view-contact.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/view-contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/view-contact.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/view-medical-record-editable.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/view-medical-record-editable.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/view-medical-record-editable.js should pass jshint.');\n  });\n});","define('ahasweb/tests/controllers/view-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/view-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/view-patient.js should pass jshint.\\ncontrollers/view-patient.js: line 22, col 10, \\'checkUpdate\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n    server.shutdown();\n  }\n});","define('ahasweb/tests/helpers/destroy-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('ahasweb/tests/helpers/ember-cli-file-picker', ['exports', 'ember'], function (exports, _ember) {\n\n  function createFile() {\n    var content = arguments.length <= 0 || arguments[0] === undefined ? ['test'] : arguments[0];\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var name = options.name;\n    var type = options.type;\n    var lastModifiedDate = options.lastModifiedDate;\n\n    var file = new Blob(content, { type: type ? type : 'text/plain' });\n    file.name = name ? name : 'test.txt';\n\n    return file;\n  }\n\n  var uploadFileHelper = function uploadFileHelper(content, options) {\n    var file = createFile(content, options);\n\n    var event = jQuery.Event('change');\n    event.target = {\n      files: [file]\n    };\n\n    jQuery('.file-picker__input').trigger(event);\n  };\n\n  var uploadFile = _ember['default'].Test.registerAsyncHelper('uploadFile', function (app, content, options) {\n    var file = createFile(content, options);\n\n    return triggerEvent('.file-picker__input', 'change', { target: { files: [file] } });\n  });\n\n  exports.uploadFile = uploadFile;\n  exports.uploadFileHelper = uploadFileHelper;\n});\n/* global Blob, jQuery */","define('ahasweb/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _emberSimpleAuthAuthenticatorsTest) {\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _emberSimpleAuthAuthenticatorsTest['default']);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n});\n/* global wait */","define('ahasweb/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'ahasweb/tests/helpers/start-app', 'ahasweb/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _ahaswebTestsHelpersStartApp, _ahaswebTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _ahaswebTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _ahaswebTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('ahasweb/tests/helpers/module-for-acceptance.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('ahasweb/tests/helpers/resolver', ['exports', 'ahasweb/resolver', 'ahasweb/config/environment'], function (exports, _ahaswebResolver, _ahaswebConfigEnvironment) {\n\n  var resolver = _ahaswebResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _ahaswebConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _ahaswebConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('ahasweb/tests/helpers/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('ahasweb/tests/helpers/start-app', ['exports', 'ember', 'ahasweb/app', 'ahasweb/config/environment'], function (exports, _ember, _ahaswebApp, _ahaswebConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _ahaswebConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _ahaswebApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('ahasweb/tests/helpers/start-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('ahasweb/tests/integration/components/client-list-filter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('client-list-filter', 'Integration | Component | client list filter', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'DZDmtG71',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"client-list-filter\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'Er2y45lT',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"client-list-filter\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('ahasweb/tests/integration/components/client-list-filter-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/client-list-filter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/client-list-filter-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/integration/components/history-container-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('history-container', 'Integration | Component | history container', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '0E0mk6qi',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"history-container\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '2yORWJrn',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"history-container\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('ahasweb/tests/integration/components/history-container-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/history-container-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/history-container-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/integration/components/lab-result-history-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('lab-result-history', 'Integration | Component | lab result history', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'FbDV5bIg',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"lab-result-history\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '/W95A9xC',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"lab-result-history\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('ahasweb/tests/integration/components/lab-result-history-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/lab-result-history-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/lab-result-history-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/integration/components/medication-history-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('medication-history', 'Integration | Component | medication history', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'VfYK5MTJ',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"medication-history\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'MC21AhBt',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"medication-history\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('ahasweb/tests/integration/components/medication-history-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/medication-history-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/medication-history-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/integration/components/patient-history-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('patient-history', 'Integration | Component | patient history', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'HlaCvE5j',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"patient-history\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'UojCeUg7',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"patient-history\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('ahasweb/tests/integration/components/patient-history-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/patient-history-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/patient-history-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/models/client-list.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/client-list.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/client-list.js should pass jshint.');\n  });\n});","define('ahasweb/tests/models/contact.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/contact.js should pass jshint.');\n  });\n});","define('ahasweb/tests/models/new-client.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/new-client.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/new-client.js should pass jshint.');\n  });\n});","define('ahasweb/tests/models/new-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/new-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/new-patient.js should pass jshint.');\n  });\n});","define('ahasweb/tests/models/signup.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/signup.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/signup.js should pass jshint.');\n  });\n});","define('ahasweb/tests/models/user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'models/user.js should pass jshint.\\nmodels/user.js: line 7, col 17, \\'int\\' is not defined.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/models/users.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/users.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/users.js should pass jshint.');\n  });\n});","define('ahasweb/tests/models/view-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/view-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/view-patient.js should pass jshint.');\n  });\n});","define('ahasweb/tests/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('ahasweb/tests/router.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'router.js should pass jshint.\\nrouter.js: line 7, col 7, \\'Router\\' was used before it was declared, which is illegal for \\'const\\' variables.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/routes/admin.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/admin.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/admin.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/client-info.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/client-info.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/client-info.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/client-list.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/client-list.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/client-list.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/create-contact.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/create-contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/create-contact.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/create-user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/create-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/create-user.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/edit-client.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/edit-client.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/edit-client.js should pass jshint.\\nroutes/edit-client.js: line 2, col 8, \\'AuthenticatedRouteMixin\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/routes/edit-contact.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/edit-contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/edit-contact.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/lab-result-upload.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/lab-result-upload.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/lab-result-upload.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/list-side-note.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/list-side-note.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/list-side-note.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/login.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/medical-record.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/medical-record.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/medical-record.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/new-calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/new-calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-calendar.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/new-client.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/new-client.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-client.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/new-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/new-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-patient.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/new-side-note.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/new-side-note.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/new-side-note.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/radiography-upload.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/radiography-upload.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/radiography-upload.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/search-contacts.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/search-contacts.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/search-contacts.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/search-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/search-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/search-patient.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/user.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/view-appointment.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-appointment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/view-appointment.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/view-calendar.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-calendar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/view-calendar.js should pass jshint.\\nroutes/view-calendar.js: line 56, col 10, \\'parseDate\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('ahasweb/tests/routes/view-contact.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/view-contact.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/view-image-record.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-image-record.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/view-image-record.js should pass jshint.\\nroutes/view-image-record.js: line 71, col 18, Missing semicolon.\\nroutes/view-image-record.js: line 2, col 8, \\'AuthenticatedRouteMixin\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('ahasweb/tests/routes/view-medical-record-editable.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-medical-record-editable.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/view-medical-record-editable.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/view-medical-record.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-medical-record.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/view-medical-record.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/view-patient.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-patient.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/view-patient.js should pass jshint.');\n  });\n});","define('ahasweb/tests/routes/view-side-note.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/view-side-note.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/view-side-note.js should pass jshint.');\n  });\n});","define('ahasweb/tests/services/ajax.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/ajax.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/ajax.js should pass jshint.');\n  });\n});","define('ahasweb/tests/test-helper', ['exports', 'ahasweb/tests/helpers/resolver', 'ember-qunit'], function (exports, _ahaswebTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_ahaswebTestsHelpersResolver['default']);\n});","define('ahasweb/tests/test-helper.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('ahasweb/tests/transforms/user.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | transforms/user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/user.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/application-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/application-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/client-info-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:client-info', 'Unit | Controller | client info', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/client-info-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/client-info-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/client-info-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/client-list-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:client-list', 'Unit | Controller | client list', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/client-list-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/client-list-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/client-list-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/create-contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:create-contact', 'Unit | Controller | create contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/create-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/create-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/create-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/create-user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:login', 'Unit | Controller | create-user', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/create-user-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/create-user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/create-user-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/edit-client-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:edit-client', 'Unit | Controller | edit client', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/edit-client-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/edit-client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/edit-client-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/edit-contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:edit-contact', 'Unit | Controller | edit contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/edit-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/edit-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/edit-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/lab-result-upload-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:lab-result-upload', 'Unit | Controller | lab result upload', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/lab-result-upload-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/lab-result-upload-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/lab-result-upload-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/list-side-note-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:list-side-note', 'Unit | Controller | list side note', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/list-side-note-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/list-side-note-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/list-side-note-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:login', 'Unit | Controller | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/login-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/login-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/medical-record-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:medical-record', 'Unit | Controller | medical record', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/medical-record-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/medical-record-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/medical-record-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/new-calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:new-calendar', 'Unit | Controller | new calendar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/new-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/new-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/new-calendar-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/new-client-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:new-client', 'Unit | Controller | new client', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/new-client-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/new-client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/new-client-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/new-side-note-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:new-side-note', 'Unit | Controller | new side note', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/new-side-note-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/new-side-note-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/new-side-note-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/radiography-upload-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:radiography-upload', 'Unit | Controller | radiography upload', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/radiography-upload-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/radiography-upload-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/radiography-upload-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/search-contacts-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:search-contacts', 'Unit | Controller | search contacts', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/search-contacts-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/search-contacts-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/search-contacts-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/view-appointment-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:view-appointment', 'Unit | Controller | view appointment', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/view-appointment-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/view-appointment-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/view-appointment-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/view-calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:view-calendar', 'Unit | Controller | view calendar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/view-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/view-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/view-calendar-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/view-contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:view-contact', 'Unit | Controller | view contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/view-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/view-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/view-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/controllers/view-medical-record-editable-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:view-medical-record-editable', 'Unit | Controller | view medical record editable', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ahasweb/tests/unit/controllers/view-medical-record-editable-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/controllers/view-medical-record-editable-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/view-medical-record-editable-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/models/client-list-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('client-list', 'Unit | Model | client list', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ahasweb/tests/unit/models/client-list-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/client-list-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/client-list-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/models/new-client-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('new-client', 'Unit | Model | new client', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ahasweb/tests/unit/models/new-client-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/new-client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/new-client-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/models/person-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('person', 'Unit | Model | person', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ahasweb/tests/unit/models/person-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/person-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/person-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/models/view-patient-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('view-patient', 'Unit | Model | view patient', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ahasweb/tests/unit/models/view-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/models/view-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/view-patient-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/client-info-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:client-info', 'Unit | Route | client info', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/client-info-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/client-info-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/client-info-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/client-list-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:client-list', 'Unit | Route | client list', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/client-list-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/client-list-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/client-list-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/create-contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:create-contact', 'Unit | Route | create contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/create-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/create-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/create-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/create-user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:create-user', 'Unit | Route | create user', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/create-user-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/create-user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/create-user-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/edit-client-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:edit-client', 'Unit | Route | edit client', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/edit-client-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/edit-client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/edit-client-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/edit-contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:edit-contact', 'Unit | Route | edit contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/edit-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/edit-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/edit-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index');\n\n  (0, _emberQunit.test)('should transition to login route', function (assert) {\n    var route = this.subject({\n      replaceWith: function replaceWith(routeName) {\n        assert.equal(routeName, 'login', 'replace with route name login');\n      }\n    });\n    route.beforeModel();\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/lab-result-upload-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:lab-result-upload', 'Unit | Route | lab result upload', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/lab-result-upload-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/lab-result-upload-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/lab-result-upload-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/list-side-note-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:list-side-note', 'Unit | Route | list side note', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/list-side-note-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/list-side-note-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/list-side-note-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/login-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:login', 'Unit | Route | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  //it exists test covered in index-test, cant think of any else\n});","define('ahasweb/tests/unit/routes/login-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/login-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/medical-record-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:medical-record', 'Unit | Route | medical record', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/medical-record-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/medical-record-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/medical-record-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/new-calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:new-calendar', 'Unit | Route | new calendar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/new-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/new-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/new-calendar-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/new-client-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:new-client', 'Unit | Route | new client', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/new-client-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/new-client-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/new-client-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/new-patient-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:new-patient', 'Unit | Route | new patient', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/new-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/new-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/new-patient-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/new-side-note-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:new-side-note', 'Unit | Route | new side note', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/new-side-note-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/new-side-note-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/new-side-note-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/radiography-upload-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:radiography-upload', 'Unit | Route | radiography upload', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/radiography-upload-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/radiography-upload-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/radiography-upload-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/search-contacts-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:search-contacts', 'Unit | Route | all contacts', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/search-contacts-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/search-contacts-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/search-contacts-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/search-patient-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:search-patient', 'Unit | Route | search patient', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/search-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/search-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/search-patient-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/view-appointment-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:view-appointment', 'Unit | Route | view appointment', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/view-appointment-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/view-appointment-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/view-appointment-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/view-calendar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:view-calendar', 'Unit | Route | view calendar', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/view-calendar-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/view-calendar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/view-calendar-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/view-contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:view-contact', 'Unit | Route | one contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/view-contact-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/view-contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/view-contact-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/view-image-record-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:view-image-record', 'Unit | Route | view image record', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/view-image-record-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/view-image-record-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/view-image-record-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/view-medical-record-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:view-medical-record', 'Unit | Route | view medical record', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/view-medical-record-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/view-medical-record-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/view-medical-record-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/view-patient-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:view-patient', 'Unit | Route | view patient', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/view-patient-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/view-patient-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/view-patient-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/routes/view-side-note-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:view-side-note', 'Unit | Route | view side note', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ahasweb/tests/unit/routes/view-side-note-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/view-side-note-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/view-side-note-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/services/ajax-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:ajax', 'Unit | Service | ajax', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('ahasweb/tests/unit/services/ajax-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/services/ajax-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/ajax-test.js should pass jshint.');\n  });\n});","define('ahasweb/tests/unit/transforms/user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('transform:user', 'Unit | Transform | user', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var transform = this.subject();\n    assert.ok(transform);\n  });\n});","define('ahasweb/tests/unit/transforms/user-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/transforms/user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/transforms/user-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('ahasweb/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}